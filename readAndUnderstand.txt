I want you to create a project called "portfolio-carljohnvillavito" using next.js. And i also want to convert the files extension to ".ejs" if it is possible. Im using termux to import the project to github so i can install some dependencies.

=====PUBLIC FOLDER=====
/public/index.html:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CJ's Portfolio</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="styles.css">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>
<body>
    <canvas id="matrix-rain"></canvas>

    <div class="main-content">
        <!-- Header Banner -->
        <header class="banner">
            <img src="/img/geekPerson.jpeg" alt="Profile Photo" id="profile-photo" class="profile-photo">
            <h1>Welcome to CJ's Portfolio!</h1>
        </header>

        <!-- Sidebar Drawer -->
        <div class="drawer" id="drawer">
            <div class="drawer-banner">
                <h2>Main Menu</h2>
            </div>
            <nav>
                <ul>
                    <li>
                        <a href="#about">
                            <img src="/img/about-me.png" alt="About Me" class="nav-icon">
                            <span>About Me</span>
                        </a>
                    </li>
                    <li>
                        <a href="#languages">
                            <img src="/img/programming.jpeg" alt="Programming" class="nav-icon">
                            <span>My Programming Languages</span>
                        </a>
                    </li>
                    <li>
                        <a href="#projects">
                            <img src="/img/folder.png" alt="Projects" class="nav-icon">
                            <span>My Projects and Applications</span>
                        </a>
                    </li>
                    <li>
                        <a href="#contacts">
                            <img src="/img/phone.png" alt="Contacts" class="nav-icon">
                            <span>My Contacts</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>

        <div class="content-sections">
            <!-- Your Information Section -->
            <section id="your-information" class="section-card">
                <h2>Your Information</h2>
                <div class="row">
                    <div class="col-12">
                        <p id="current-time"></p>
                        <p id="ip-address">IP Address: Loading...</p>
                    </div>
                </div>
            </section>

            <!-- About Me Section -->
            <section id="about" class="section-card">
                <h2>About Me</h2>
                <div class="about-content">
                    <img src="/img/owner.jpg" alt="Owner Photo" class="owner-photo">
                    <div class="about-text">
                        <h3>Carl John B. Villavito</h3>
                        <p>19 Years Old</p>
                        <p>MIST STUDENT</p>
                        <p>Mindanao, North Cotabato, Kidapawan City</p>
                        <h4>MY INTERESTS:</h4>
                        <ul>
                            <li>Learning new things</li>
                            <li>Reading fictional genre</li>
                            <li>Watching Anime</li>
                        </ul>
                    </div>
                </div>
            </section>

            <!-- Programming Languages Section -->
            <section id="languages" class="section-card">
                <h2>My Programming Languages</h2>
                <div class="languages-grid">
                    <div class="language-card">
                        <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg" alt="JavaScript">
                        <h3>JavaScript</h3>
                        <p>A versatile programming language for web development, both frontend and backend.</p>
                    </div>
                    <div class="language-card">
                        <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/cplusplus/cplusplus-original.svg" alt="C++">
                        <h3>C++</h3>
                        <p>A powerful programming language for system programming and game development.</p>
                    </div>
                    <div class="language-card">
                        <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/python/python-original.svg" alt="Python">
                        <h3>Python</h3>
                        <p>A high-level programming language perfect for automation and data science.</p>
                    </div>
                </div>
            </section>

            <!-- Projects Section -->
            <section id="projects" class="section-card">
                <h2>My Projects and Applications</h2>
                <div class="projects-grid">
                    <div class="project-card">
                        <img src="/img/gpt4o.png" alt="Project 1">
                        <h3>CHAT GPT4o Model</h3>
                        <p>Access the latest OpenAI Model Gpt4o.</p>
                        <button class="visit-btn" onclick="window.location.href = 'https://gpt4o-carljohnvillavito.onrender.com/';">Visit</button>
                    </div>
                    <div class="project-card">
                        <img src="/img/todolist.png" alt="Project 2">
                        <h3>TO DO LIST APP</h3>
                        <p>Add, Edit, and Remove List Using this To Do list App.</p>
                        <button class="visit-btn" onclick="window.location.href = '/projects/todolist/index.html';">Visit</button>
                    </div>
                    <div class="project-card">
                        <img src="/img/aiImgGen.png" alt="Project 3">
                        <h3>AI IMAGE GENERATOR</h3>
                        <p>Generate any image from AI with just one prompt.</p>
                        <button class="visit-btn" onclick="window.location.href='https://test-ai-image-generator.onrender.com/'">Visit</button>
                    </div>
                </div>
            </section>

            <!-- Contacts Section -->
            <section id="contacts" class="section-card">
                <h2>My Contacts</h2>
                <div class="contacts-grid">
                    <a href="https://www.facebook.com/carljohn.villavito" class="contact-item">
                        <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/facebook/facebook-original.svg" alt="Facebook">
                        <span>Facebook</span>
                    </a>
                    <a href="https://github.com/carljohnvillavito" class="contact-item">
                        <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/github/github-original.svg" alt="Github">
                        <span>Github</span>
                    </a>
                    <a href="https://instagram.com/carljohn.villavito" class="contact-item">
                        <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/e/e7/Instagram_logo_2016.svg/2048px-Instagram_logo_2016.svg.png" alt="Instagram">
                        <span>Instagram</span>
                    </a>
                    <a href="/cdn-cgi/l/email-protection#6b080a1907010403051d0207070a1d021f04595b595f2b0c060a020745080406" class="contact-item">
                        <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Gmail_icon_%282020%29.svg/2560px-Gmail_icon_%282020%29.svg.png" alt="Gmail">
                        <span><span class="__cf_email__" data-cfemail="fa999b8896909592948c9396969b8c938e95c8cac8ceba9d979b9396d4999597">[email&#160;protected]</span></span>
                    </a>
                </div>
            </section>
        </div>
    </div>

    <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="script.js"></script>
</body>
</html>

/public/script.js:
// Matrix Rain Effect
const canvas = document.getElementById('matrix-rain');
const ctx = canvas.getContext('2d');

function resizeCanvas() {
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
}

resizeCanvas();

const matrix = "ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789@#$%^&*()*&^%";
const matrixChars = matrix.split('');

const fontSize = 10;
let columns = canvas.width/fontSize;

let drops = [];
function initDrops() {
    drops = [];
    columns = canvas.width/fontSize;
    for(let x = 0; x < columns; x++) {
        drops[x] = 1;
    }
}

initDrops();

function drawMatrixRain() {
    ctx.fillStyle = 'rgba(0, 0, 0, 0.04)';
    ctx.fillRect(0, 0, canvas.width, canvas.height);
    
    ctx.fillStyle = '#0F0';
    ctx.font = fontSize + 'px monospace';

    for(let i = 0; i < drops.length; i++) {
        const text = matrixChars[Math.floor(Math.random()*matrixChars.length)];
        ctx.fillText(text, i*fontSize, drops[i]*fontSize);
        
        if(drops[i]*fontSize > canvas.height && Math.random() > 0.975) {
            drops[i] = 0;
        }
        drops[i]++;
    }
}

// Drawer Functionality
const profilePhoto = document.getElementById('profile-photo');
const drawer = document.getElementById('drawer');
let isDrawerOpen = false;

function toggleDrawer(open) {
    isDrawerOpen = open;
    if (open) {
        drawer.style.left = '0';
        drawer.style.boxShadow = '2px 0 10px rgba(0, 255, 0, 0.3)';
    } else {
        drawer.style.left = '-280px';
        drawer.style.boxShadow = 'none';
    }
}

drawer.addEventListener('transitionend', function(e) {
    if (e.propertyName === 'left' && !isDrawerOpen) {
        drawer.style.boxShadow = 'none';
    }
});

profilePhoto.addEventListener('click', (e) => {
    e.stopPropagation();
    toggleDrawer(!isDrawerOpen);
});

// Close drawer when clicking outside
document.addEventListener('click', (e) => {
    if (isDrawerOpen && 
        !drawer.contains(e.target) && 
        e.target !== profilePhoto) {
        toggleDrawer(false);
    }
});

// Handle window resize
let resizeTimeout;
window.addEventListener('resize', () => {
    clearTimeout(resizeTimeout);
    resizeTimeout = setTimeout(() => {
        resizeCanvas();
        initDrops();
    }, 250);
});

// Start the matrix rain animation
setInterval(drawMatrixRain, 35);

// Smooth scrolling for navigation links
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const section = document.querySelector(this.getAttribute('href'));
        if (section) {
            const yOffset = -20;
            const y = section.getBoundingClientRect().top + window.pageYOffset + yOffset;
            window.scrollTo({
                top: y,
                behavior: 'smooth'
            });
            
            // Close drawer on mobile after clicking a link
            if (window.innerWidth <= 768) {
                toggleDrawer(false);
            }
        }
    });
});

// Clock update function
function updateClock() {
    const now = new Date();
    document.getElementById('current-time').textContent = `Current Time: ${now.toLocaleString()}`;
}

// Initialize clock
setInterval(updateClock, 1000);
updateClock();

// Fetch and display IP address using Axios
async function fetchIPAddress() {
    try {
        const response = await axios.get('https://api-bdc.net/data/client-ip');
        const data = response.data;
        document.getElementById('ip-address').textContent = `IP Address: ${data.ipString} (${data.ipType})`;
    } catch (error) {
        console.error('Error fetching IP address:', error);
        document.getElementById('ip-address').textContent = 'IP Address: Unable to fetch';
    }
}

// Call the function to fetch and display IP address
fetchIPAddress();


/public/style.css:
/* General Styles */
body {
    margin: 0;
    padding: 0;
    font-family: 'Courier New', monospace;
    background-color: #000;
    color: #00ff00;
    overflow-x: hidden;
    line-height: 1.6;
}

#matrix-rain {
    position: fixed;
    top: 0;
    left: 0;
    z-index: -1;
    width: 100%;
    height: 100%;
}

.main-content {
    position: relative;
    z-index: 1;
    padding: 20px;
    max-width: 1400px;
    margin: 0 auto;
}

/* Banner Styles */
.banner {
    display: flex;
    align-items: center;
    gap: 20px;
    padding: 20px;
    background: rgba(0, 20, 0, 0.8);
    border-radius: 15px;
    margin-bottom: 20px;
    border: 2px solid #00ff00;
    box-shadow: 0 0 10px #00ff00;
}

.banner h1 {
    margin: 0;
    font-size: clamp(1.5rem, 4vw, 2.5rem);
    word-wrap: break-word;
}

.profile-photo {
    width: 120px;
    height: 120px;
    min-width: 120px;
    border-radius: 50%;
    border: 3px solid #00ff00;
    cursor: pointer;
    transition: transform 0.3s ease;
    object-fit: cover;
}

.profile-photo:hover {
    transform: scale(1.1);
}

/* Drawer Styles */
.drawer {
    position: fixed;
    left: -280px;
    top: 0;
    width: 280px;
    height: 100%;
    background: rgba(0, 20, 0, 0.95);
    padding: 0;
    transition: left 0.3s ease, box-shadow 0.3s ease;
    border-right: 2px solid #00ff00;
    z-index: 1000;
    overflow-y: auto;
    box-shadow: 2px 0 10px rgba(0, 255, 0, 0.3);
}

.drawer-banner {
    background: rgba(0, 40, 0, 0.8);
    padding: 20px;
    text-align: center;
    border-bottom: 2px solid #00ff00;
}

.drawer-banner h2 {
    margin: 0;
    font-size: 1.5rem;
    font-weight: bold;
    color: #00ff00;
    text-transform: uppercase;
    letter-spacing: 2px;
}

.drawer ul {
    list-style: none;
    padding: 20px;
    margin: 0;
}

.drawer li {
    margin: 10px 0;
}

.drawer a {
    display: flex;
    align-items: center;
    color: #00ff00;
    text-decoration: none;
    font-size: 1.1em;
    transition: all 0.3s ease;
    padding: 15px;
    border-radius: 10px;
    background: rgba(0, 40, 0, 0.3);
    border: 1px solid transparent;
}

.drawer a:hover {
    color: #fff;
    background: rgba(0, 255, 0, 0.2);
    border: 1px solid #00ff00;
    transform: translateX(5px);
}

.nav-icon {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    margin-right: 15px;
    object-fit: cover;
    border: 2px solid #00ff00;
}

.drawer a:hover .nav-icon {
    border-color: #fff;
}

/* Section Cards */
.section-card {
    background: rgba(0, 20, 0, 0.8);
    border-radius: 20px;
    padding: 30px;
    margin: 40px 0;
    border: 2px solid #00ff00;
    box-shadow: 0 0 15px rgba(0, 255, 0, 0.2);
}

.section-card h2 {
    margin-top: 0;
    margin-bottom: 30px;
    font-size: clamp(1.5rem, 3vw, 2rem);
    border-bottom: 2px solid #00ff00;
    padding-bottom: 10px;
}

/* Your Information Section */
#your-information p {
    font-size: 1.4rem;
    margin-bottom: 10px;
}

/* About Section */
.about-content {
    display: flex;
    gap: 40px;
    align-items: flex-start;
}

.owner-photo {
    width: 250px;
    height: 250px;
    border-radius: 50%;
    border: 3px solid #00ff00;
    object-fit: cover;
}

.about-text {
    flex: 1;
}

.about-text h3 {
    margin-top: 0;
    font-size: 1.5rem;
}

.about-text ul {
    padding-left: 20px;
}

/* Programming Languages Section */
.languages-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 30px;
    margin-top: 20px;
}

.language-card {
    background: rgba(0, 40, 0, 0.5);
    padding: 25px;
    border-radius: 15px;
    text-align: center;
    border: 1px solid #00ff00;
    transition: transform 0.3s ease;
}

.language-card:hover {
    transform: translateY(-5px);
}

.language-card img {
    width: 80px;
    height: 80px;
    border-radius: 50%;
    margin-bottom: 15px;
    padding: 10px;
    background: rgba(0, 0, 0, 0.2);
}

.language-card h3 {
    margin: 10px 0;
}

.language-card p {
    margin: 0;
    font-size: 0.9rem;
}

/* Projects Section */
.projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 30px;
    margin-top: 20px;
}

.project-card {
    background: rgba(0, 40, 0, 0.5);
    padding: 20px;
    border-radius: 15px;
    text-align: center;
    border: 1px solid #00ff00;
    transition: transform 0.3s ease;
}

.project-card:hover {
    transform: translateY(-5px);
}

.project-card img {
    width: 100%;
    height: 200px;
    object-fit: cover;
    border-radius: 10px;
    margin-bottom: 15px;
}

.project-card h3 {
    margin: 10px 0;
}

.project-card p {
    margin: 15px 0;
}

.visit-btn {
    background: #00ff00;
    color: #000;
    border: none;
    padding: 10px 25px;
    border-radius: 5px;
    cursor: pointer;
    transition: all 0.3s ease;
    font-weight: bold;
    font-size: 1rem;
}

.visit-btn:hover {
    background: #fff;
    transform: scale(1.05);
}

/* Contacts Section */
.contacts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 20px;
    margin-top: 20px;
}

.contact-item {
    display: flex;
    align-items: center;
    gap: 15px;
    padding: 20px;
    background: rgba(0, 40, 0, 0.5);
    border-radius: 10px;
    text-decoration: none;
    color: #00ff00;
    border: 1px solid #00ff00;
    transition: all 0.3s ease;
}

.contact-item:hover {
    transform: translateY(-5px);
    background: rgba(0, 60, 0, 0.5);
}

.contact-item img {
    width: 30px;
    height: 30px;
    object-fit: contain;
}

.contact-item span {
    word-break: break-word;
}

/* Responsive Design */
@media (max-width: 768px) {
    .main-content {
        padding: 15px;
    }

    .banner {
        flex-direction: column;
        text-align: center;
        padding: 15px;
    }

    .about-content {
        flex-direction: column;
        align-items: center;
        text-align: center;
        gap: 20px;
    }

    .owner-photo {
        width: 200px;
        height: 200px;
    }

    .section-card {
        padding: 20px;
        margin: 20px 0;
    }

    .languages-grid,
    .projects-grid {
        grid-template-columns: 1fr;
        gap: 20px;
    }

    .contacts-grid {
        grid-template-columns: 1fr;
    }

    .contact-item {
        padding: 15px;
    }
}

/* Additional Mobile Optimizations */
@media (max-width: 480px) {
    .profile-photo {
        width: 100px;
        height: 100px;
    }

    .banner h1 {
        font-size: 1.5rem;
    }

    .section-card {
        padding: 15px;
    }

    .owner-photo {
        width: 180px;
        height: 180px;
    }

    .contact-item {
        flex-direction: column;
        text-align: center;
    }

    .contact-item img {
        width: 40px;
        height: 40px;
    }
}

=====PROJECTS FOLDER=====
projects/todolist:

index.html:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Modern Todo List</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card shadow-lg">
                    <div class="card-body">
                        <h1 class="text-center mb-4">Todo List</h1>
                        
                        <!-- Add Todo Form -->
                        <form id="todoForm" class="mb-4">
                            <div class="input-group">
                                <input type="text" id="todoInput" class="form-control" placeholder="Add a new task..." required>
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-plus-lg"></i> Add
                                </button>
                            </div>
                        </form>

                        <!-- Todo List -->
                        <div class="todo-list" id="todoList">
                            <!-- Tasks will be added here dynamically -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Modal -->
    <div class="modal fade" id="editModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Task</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="text" id="editInput" class="form-control">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="saveEdit">Save Changes</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="script.js"></script>
</body>
</html>

script.js:
document.addEventListener('DOMContentLoaded', () => {
    const todoForm = document.getElementById('todoForm');
    const todoInput = document.getElementById('todoInput');
    const todoList = document.getElementById('todoList');
    const editModal = new bootstrap.Modal(document.getElementById('editModal'));
    const editInput = document.getElementById('editInput');
    const saveEditBtn = document.getElementById('saveEdit');
    
    let todos = JSON.parse(localStorage.getItem('todos')) || [];
    let currentEditId = null;

    // Render todos
    function renderTodos() {
        todoList.innerHTML = '';
        todos.forEach((todo, index) => {
            const todoItem = document.createElement('div');
            todoItem.className = `todo-item d-flex justify-content-between align-items-center ${todo.completed ? 'completed' : ''}`;
            todoItem.dataset.id = index;
            
            todoItem.innerHTML = `
                <span class="todo-text">${todo.text}</span>
                <div class="todo-actions">
                    <button class="btn btn-outline-secondary btn-sm btn-complete" title="Mark as ${todo.completed ? 'incomplete' : 'complete'}">
                        <i class="bi ${todo.completed ? 'bi-arrow-counterclockwise' : 'bi-check-lg'}"></i>
                    </button>
                    <button class="btn btn-outline-secondary btn-sm btn-edit" title="Edit">
                        <i class="bi bi-pencil"></i>
                    </button>
                    <button class="btn btn-outline-secondary btn-sm btn-delete" title="Delete">
                        <i class="bi bi-trash"></i>
                    </button>
                </div>
            `;

            todoList.appendChild(todoItem);
        });
        saveTodos();
    }

    // Save todos to localStorage
    function saveTodos() {
        localStorage.setItem('todos', JSON.stringify(todos));
    }

    // Add new todo
    todoForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const text = todoInput.value.trim();
        if (text) {
            todos.push({ text, completed: false });
            todoInput.value = '';
            renderTodos();
        }
    });

    // Handle todo actions (complete, edit, delete)
    todoList.addEventListener('click', (e) => {
        const todoItem = e.target.closest('.todo-item');
        const id = parseInt(todoItem.dataset.id);

        if (e.target.closest('.btn-complete')) {
            todos[id].completed = !todos[id].completed;
            renderTodos();
        }

        if (e.target.closest('.btn-edit')) {
            currentEditId = id;
            editInput.value = todos[id].text;
            editModal.show();
        }

        if (e.target.closest('.btn-delete')) {
            todoItem.classList.add('shake');
            setTimeout(() => {
                todos.splice(id, 1);
                renderTodos();
            }, 300);
        }
    });

    // Handle edit save
    saveEditBtn.addEventListener('click', () => {
        const newText = editInput.value.trim();
        if (newText && currentEditId !== null) {
            todos[currentEditId].text = newText;
            renderTodos();
            editModal.hide();
        }
    });

    // Initial render
    renderTodos();
});

styles.css:
body {
    min-height: 100vh;
    background: linear-gradient(135deg, #fff 0%, #ffddc1 50%, #ffbb85 100%);
}

.card {
    border: none;
    border-radius: 15px;
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(10px);
}

.btn-primary {
    background-color: #ff9248;
    border-color: #ff9248;
}

.btn-primary:hover {
    background-color: #ff7a1f;
    border-color: #ff7a1f;
}

.todo-item {
    background: white;
    border-radius: 8px;
    margin-bottom: 8px;
    padding: 12px;
    transition: all 0.3s ease;
    border-left: 4px solid #ff9248;
}

.todo-item:hover {
    transform: translateX(5px);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.todo-item.completed {
    border-left-color: #28a745;
    background-color: #f8f9fa;
}

.todo-item.completed .todo-text {
    text-decoration: line-through;
    color: #6c757d;
}

.todo-actions {
    display: flex;
    gap: 8px;
}

.todo-actions button {
    padding: 4px 8px;
    font-size: 14px;
}

.btn-edit {
    color: #ff9248;
    border-color: #ff9248;
}

.btn-edit:hover {
    background-color: #ff9248;
    color: white;
}

.btn-delete {
    color: #dc3545;
    border-color: #dc3545;
}

.btn-delete:hover {
    background-color: #dc3545;
    color: white;
}

.btn-complete {
    color: #28a745;
    border-color: #28a745;
}

.btn-complete:hover {
    background-color: #28a745;
    color: white;
}

/* Animations */
@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateY(-20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.todo-item {
    animation: slideIn 0.3s ease-out;
}

.shake {
    animation: shake 0.5s ease-in-out;
}

@keyframes shake {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-5px); }
    75% { transform: translateX(5px); }
}

=====IMG FOLDER=====
/img:

(already have them in a directory.)
about-me.png
aiImgGen.png
folder.png
geekPerson.jpeg
gpt4o.png
owner.jpg
phone.png
programming.jpeg
todolist.png